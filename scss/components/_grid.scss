// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************

.container {
  @extend %center;
  width: $container-width-mobile;
}

// grid base class
.grid {

  // .grid__row
  &__row {
    @include flexy(column);
    padding: $spacing-extra-small;

    // NOTE: replace with media query mixin if aiming for exceeds
    @include media-query('desktop') {
      flex-direction: row;
    }

  }

  // .grid__col
  &__col {

    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {

      // concatenate CSS selector, ie when $i = 1,
      // selector would be .grid__col--1
      &--#{$i} {

        // base styles applied to all grid columns
        // NOTE: could be converted to a placeholder, along with margin
        // from the  media query
        @extend %grid-col-base;

        // NOTE: replace with media query mixin if aiming for exceeds
        @include media-query('desktop') {
          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"};
        }
      }

    }

    @each $grid-number, $grid-color in $grid-colors {
      &--#{$grid-number}.theme__colors {
        @extend %padded;
        @extend %theme__colors_base;
        color: $color-paragraph;
        background-color: $grid-color;
      }
    }

    &--9 {
      @include media-query('desktop') {
        justify-content: center;
        align-items: center;
      }
    }
  }
}

// targets all elements with classes that begin with grid__col
[class^=grid__col] {
  // grid__col + grid__col, targets two sibling columns
  & + & {

    // NOTE: replace with media query mixin if aiming for exceeds
    @include media-query('desktop') {
      // add grid gutter
      margin-left: $spacing-extra-small;
    }
  }
}

.centered {
  @extend %center;
}
